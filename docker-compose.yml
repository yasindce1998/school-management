services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: school-management-api
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=school_db
      - JWT_SECRET=your_jwt_secret
      - PORT=8080
    volumes:
      - ./api:/app/api
      - ./internal:/app/internal
      - ./config:/app/config
    networks:
      - school-network
    restart: always
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8080/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: school-management-frontend
    ports:
      - "3000:80"
    depends_on:
      - app
    networks:
      - school-network
    restart: always

  db:
    image: postgres:15-alpine
    container_name: school-management-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=school_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - school-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  school-network:
    driver: bridge
